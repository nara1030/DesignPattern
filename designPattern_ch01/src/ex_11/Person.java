package ex_11;

/*
 * 의존 관계: 한 클래스가 다른 클래스를 사용하는 경우
 * 1. 클래스의 속성에서 참조할 때
 * 2. 연산의 인자로 사용될 때
 * 3. 메서드 내부의 지역 객체로 참조될 때
 * 
 * 연관 관계 vs. 의존 관계
 *  - 연관 관계: 오랜 시간 동안 같이 할 객체와의 관계
 *  - 의존 관계: 짧은 시간 동안 이용하는 관계
 * 
 *  - 아래 예제의 경우 1번 케이스
 *  - 즉, 한 클래스의 객체를 다른 클래스 객체의 속성에서 참조하는 경우에는
 *    참조하는 객체가 변경되지 않는 한 두 클래스의 객체들이 오랜 기간
 *    협력 관계를 통해 기능을 수행한다고 볼 수 있다.
 *  - 예를 들면 자동차(Car 클래스)를 소유한 사람(Person 클래스)이
 *    자동차를 이용해 출근한다고 할 경우 한 번 출근한 후 다음 날 출근할 때도
 *    어제 사용한 자동차를 타고 출근할 것이다.
 *    매번 출근할 때마다 다른 자동차를 타는 경우는 거의 없을 것이다.
 *    이런 경우 사람과 자동차의 관계는 연관 관계며 Person 클래스의 속성으로
 *    Car 객체를 참조한다.
 *  - 반례: 자동차와 주유기
 *    이 경우 객체지향 프로그램에서는 사용되는 주유기를 인자나 지역 객체로 생성해 구현
 */
public class Person {
	private Car owns;

	public void setCar(Car car) {
		this.owns = car;
	}

	public Car getCar() {
		return this.owns;
	}
}
